buildscript {
	ext {
		springBootVersion = '1.5.7.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'war'
apply plugin: 'jacoco'

group = 'cl.intelliware'
version = '0.0.1'
sourceCompatibility = 1.8

war {
	baseName = 'smartlab'
}



repositories {
	mavenCentral()
}


dependencies {
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile group: 'org.json', name: 'json', version: '20090211'
	compile('org.springframework.boot:spring-boot-starter-security')
	compile("org.springframework.cloud:spring-cloud-security:1.1.3.RELEASE")
	compile("org.springframework.security.oauth:spring-security-oauth2:2.0.11.RELEASE")
	compile('org.springframework.boot:spring-boot-starter-web')
	compile group: 'io.rest-assured', name: 'rest-assured', version: '3.0.3'
	compile group: 'io.rest-assured', name: 'json-schema-validator', version: '3.0.3'
	compile group: 'org.python', name: 'jython', version: '2.7.0'
	runtime('mysql:mysql-connector-java')
	providedRuntime("org.springframework.boot:spring-boot-starter-tomcat")
	testCompile('org.springframework.boot:spring-boot-starter-test')
	testCompile('org.springframework.security:spring-security-test')
	testCompile group: 'junit', name: 'junit'
	testCompile group: 'org.hsqldb', name: 'hsqldb'
}
test {
	reports.junitXml.destination = file('build/test-results/results')
}
jacocoTestReport {
	group = "Reporting"
	reports {
		xml.enabled true
		csv.enabled false
		html.destination "${buildDir}/reports/coverage"
	}
}
bootRun {
	addResources = true //te amo josukee
}